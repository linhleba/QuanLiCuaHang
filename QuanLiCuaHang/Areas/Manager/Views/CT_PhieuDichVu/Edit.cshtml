@model QuanLiCuaHang.Areas.Manager.Data.CHITIET_PHIEUDV

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Manager/Views/Shared/_Layout.cshtml";
}

<script src="~/Scripts/jquery-3.4.1.js"></script>
@*<link rel="stylesheet" type="text/css" href="~/Assets/Manager/dist/assets/sweetalert/dist/sweetalert2.css">*@
@*<script src="~/Assets/Manager/dist/assets/sweetalert/dist/sweetalert2.all.min.js"></script>*@
<link rel="stylesheet" href="https://npmcdn.com/sweetalert2@4.0.15/dist/sweetalert2.min.css">
@*<script src="https://npmcdn.com/sweetalert2@4.0.15/dist/sweetalert2.min.js"></script>*@
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<script type="text/javascript">
    // Hàm chọn sản phẩm hiển thị đơn giá, đơn vị tinnhs
    $(document).ready(function () {
        var MaTinhTrangDV = $("#MaTinhTrangDV").val();
        var ConLai = parseFloat($("#ThanhToanConLai").val());

        // Disable MaTinhTrangDV
        if (MaTinhTrangDV == 1) {
            $("#MaTinhTrangDV").prop("disabled", true);
        }
        $("#MaTinhTrangDV").change(function () {

            var MaTinhTrangDV = $("#MaTinhTrangDV").val();
            if (MaTinhTrangDV == 1) {
                swal({
                    title: "Bạn có chắc chắn không?",
                    text: "Khi thay đổi thành ĐÃ GIAO, bạn không thể thay đổi lại",
                    icon: "warning",
                    buttons: true,
                    dangerMode: true,
                })
                    .then((willDelete) => {

                        if (willDelete) {
                            $("#MaTinhTrangDV").prop("disabled", true);
                            //$("#ThanhToanConLai").val(0);
                            //$("#ThanhToanTraTruoc").val(parseFloat($("#ThanhTien").val()));

                            swal("Thành công", {
                                icon: "success",
                            });

                        }
                        else {
                            $("#MaTinhTrangDV").val(0);
                        }
                       ;
                    });
            }
        });


        $("#submit").click(function (event) {

            var error_free = true;
            if (!error_free) {
                event.preventDefault();
            }
            else {
                swal({
                    title: "Thành công !",
                    text: "Cập nhật thành công!",
                    icon: "success",
                    button: "Đồng ý!",
                });
            }
            $("#MaTinhTrangDV").prop("disabled", false);

        });
    });
</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <style>
        #nhapphieu {
            text-align: center;
            color: white;
            font-size: 35px;
            font-weight: bold;
            border: 1px solid #ddd;
            background-color: forestgreen;
            padding: 0px 0px;
            margin: 0px 290px;
        }
    </style>

    @* End CSS *@

    <h1 id="nhapphieu">SỬA CHI TIẾT PHIẾU DỊCH VỤ</h1>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.MaPDV)

    @Html.HiddenFor(model => model.MaLoaiDV)

    <div class="form-group">
        @Html.LabelFor(model => model.DonGiaDuocTinh,"Đơn Giá Được Tính", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DonGiaDuocTinh, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.DonGiaDuocTinh, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SoLuong,"Số Lượng", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SoLuong, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.SoLuong, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ThanhTien,"Thành Tiền", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThanhTien, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ThanhTien, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ThanhToanTraTruoc,"Thanh Toán Trả Trước", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThanhToanTraTruoc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ThanhToanTraTruoc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ThanhToanConLai,"Thanh Toán Còn Lại", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ThanhToanConLai, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.ThanhToanConLai, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NgayGiao,"Ngày Giao", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NgayGiao, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.NgayGiao, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaTinhTrangDV, "Tình Trạng", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("MaTinhTrangDV", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.MaTinhTrangDV, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.MaTinhTrangDV, "MaTinhTrangDV", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select id="tinhtrang">
                    <option value="Đã giao"> Đã giao </option>
                    <option value="Chưa giao"> Chưa giao </option>
                </select>
                </div>
        </div>*@




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="submit" type="submit" value="Lưu lại" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Trở về","Details", "CT_PhieuDichVu", new { id = Model.MaPDV })
</div>
